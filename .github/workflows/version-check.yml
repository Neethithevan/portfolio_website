name: Check Version

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  version_check_before_merge:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Get the previous version from the main branch
      - name: Get Previous Version from Main
        id: prev_version
        run: |
          git fetch origin main --depth=1
          PREV_VERSION=$(git show origin/main:VERSION || echo "0.0.0")
          echo "Previous Version: $PREV_VERSION"
          echo "PREV_VERSION=$PREV_VERSION" >> $GITHUB_ENV

      # Get the new version from the PR branch
      - name: Get New Version from PR Branch
        id: new_version
        run: |
          NEW_VERSION=$(cat VERSION || echo "0.0.0")
          echo "New Version: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      # Check if any other files changed in the PR
      - name: Check for Code Changes
        id: code_changes
        run: |
          CHANGED_FILES=$(git diff --name-only origin/main...HEAD | grep -v "VERSION" || true)
          if [ -z "$CHANGED_FILES" ]; then
            echo "❌ No code changes detected. Version update must be accompanied by actual changes."
            exit 1
          else
            echo "✅ Code changes detected. Proceeding with version check."
          fi

      # Enforce version increment only if there are code changes
      - name: Enforce Version Increment Before Merge
        run: |
          if [ "$PREV_VERSION" == "$NEW_VERSION" ]; then
            echo "❌ Version has not changed. Please update the VERSION file before merging."
            exit 1
          else
            echo "✅ Version updated correctly. Merge allowed."
          fi
